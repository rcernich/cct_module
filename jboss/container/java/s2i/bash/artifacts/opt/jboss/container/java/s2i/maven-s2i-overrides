
source "${JBOSS_CONTAINER_UTIL_LOGGING_MODULE}/logging.sh"

function maven_s2i_source_maven_overrides() {
  source "${JBOSS_CONTAINER_JAVA_S2I_MODULE}/maven-overrides"
}

# Accommodate fabric8
function maven_s2i_custom_binary_build() {
  if [ -f "${S2I_SOURCE_DIR}/Dockerfile" ]; then
    # This is a S2I binary build coming from fabric8-maven-plugin
    log_info "S2I binary build from fabric8-maven-plugin detected"
    if [ -d "${S2I_SOURCE_DIR}/maven" ]; then
      binary_dir="${S2I_SOURCE_DIR}/maven"
    elif [ $(find "${S2I_SOURCE_DIR}" -maxdepth 1 -type d | grep -v -e "^${S2I_SOURCE_DIR}$" | wc -l) == 1 ]; then
      # Found a single directory, take this
      binary_dir=$(find "${S2I_SOURCE_DIR}" -maxdepth 1 -type d | grep -v -e "^${S2I_SOURCE_DIR}$")
    else
      log_error "No single directory found in ${S2I_SOURCE_DIR} but:\n $(ls -l ${S2I_SOURCE_DIR})"
      return 1
    fi
    log_info "Copying binaries from ${binary_dir} to ${S2I_TARGET_DEPLOYMENTS_DIR} ..."
    rsync -l --out-format='%n' "${binary_dir}"/ "${S2I_TARGET_DEPLOYMENTS_DIR}"
  fi
}

function maven_s2i_deploy_artifacts_override() {
  if [ ${#MAVEN_S2I_ARTIFACT_DIRS} -eq 1 -a -d "${S2I_SOURCE_DIR}/${MAVEN_S2I_ARTIFACT_DIRS[0]}/hawt-app" ]; then
    cp -r "${S2I_SOURCE_DIR}/${MAVEN_S2I_ARTIFACT_DIRS[0]}/hawt-app"/* "${S2I_TARGET_DEPLOYMENTS_DIR}"
    return $?
  else
    unset -f maven_s2i_deploy_artifacts_override
    eval maven_s2i_deploy_artifacts $*
    return $?
  fi
}